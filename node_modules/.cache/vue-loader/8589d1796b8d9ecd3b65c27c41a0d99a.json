{"remainingRequest":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/src/components/layouts/Navigation.vue?vue&type=template&id=4fd9968a&","dependencies":[{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/src/components/layouts/Navigation.vue","mtime":1595772654000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}