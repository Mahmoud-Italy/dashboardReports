{"remainingRequest":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/src/components/categories/List.vue?vue&type=template&id=8f915b1e&scoped=true&","dependencies":[{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/src/components/categories/List.vue","mtime":1595776467000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Sites/work/amr/cors.hrs.com/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}